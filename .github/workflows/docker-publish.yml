name: Docker

# This workflow uses actions provided by Docker through their open source GH Actions
on:
  push:
    branches: [ "*" ]
    tags: [ '*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME_PRESENTATION_TIER: "Leodom01/XM_0091-Software_Containerization_presentation"
  IMAGE_NAME_APP_TIER: "Leodom01/XM_0091-Software_Containerization_app"
  IMAGE_NAME_DB_TIER: "Leodom01/XM_0091-Software_Containerization_db"


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # Checkout the repo con the GH VM
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker BuildX
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login on ghcr.io
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Keep commented as long as this tier won't have a Dockerfile
      - name: Extract Docker metadata for presentation tier
        id: meta_presentation
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PRESENTATION_TIER }}
          flavor: |
            latest=true

      # Keep commented as long as this tier won't have a Dockerfile
      - name: Extract Docker metadata for app tier
        id: meta_app
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_APP_TIER }}
          flavor: |
            latest=true

      # Keep commented as long as this tier won't have a Dockerfile
      - name: Extract Docker metadata for db tier
        id: meta_db
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DB_TIER }}
          flavor: |
            latest=true

      # Keep commented as long as this tier won't have a Dockerfile
      - name: Build and push presentation Docker image
        id: build-and-push-presentation
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_presentation.outputs.tags }}
          labels: ${{ steps.meta_presentation.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      # Keep commented as long as this tier won't have a Dockerfile
      - name: Build and push app Docker image
        id: build-and-push-app
        uses: docker/build-push-action@v5
        with:
          context: ./appTier
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_app.outputs.tags }}
          labels: ${{ steps.meta_app.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      # Keep commented as long as this tier won't have a Dockerfile
      - name: Build and push test Docker image
        id: build-and-push-db
        uses: docker/build-push-action@v5
        with:
          context: ./dbTier
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_db.outputs.tags }}
          labels: ${{ steps.meta_db.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64